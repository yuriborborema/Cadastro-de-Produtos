{"version":3,"sources":["./src/app/cad-prod-dep/cad-prod-dep.component.ts","./src/app/cad-prod-dep/cad-prod-dep.component.html","./src/environments/environment.ts","./src/app/product.service.ts","./src/app/departments.service.ts","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/logp/logp.component.ts","./src/app/logp/logp.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/department/department.component.ts","./src/app/department/department.component.html","./src/app/pagenotfound/pagenotfound.component.ts","./src/app/pagenotfound/pagenotfound.component.html","./src/app/app-routing.module.ts","./src/main.ts","./src/app/dialogs/suc-dialog.ts","./src/app/dialogs/dialog-elements-example-dialog.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cad-prod-dep',\n  templateUrl: './cad-prod-dep.component.html',\n  styleUrls: ['./cad-prod-dep.component.css']\n})\nexport class CadProdDepComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\" >\n        \n        <app-department fxFlex=\"40\"></app-department>\n        <app-product fxFlex=\"59\"></app-product>\n        <!-->\n        <app-product fxFlex></app-product>\n        <-->\n    </div>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from './product';\nimport { tap, delay, take } from 'rxjs/operators'; \nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n    private readonly API = 'https://hdozero.herokuapp.com/products';\n\n  constructor(private http: HttpClient) { }\n  \n  list(){\n    return this.http.get<Product[]>(this.API)\n        .pipe(\n            delay(1000),\n            tap(console.log)\n        );\n    \n    }\n    \n    add(p: Product) {\n        return this.http.post<Product>(this.API, p)\n            .pipe(take(1));\n\n    }\n            \n    update(p: Product){\n        return this.http.put(`${this.API}/${p.id}`, p).pipe(take(1));\n    \n    }\n            \n    delete(p: Product){\n        return this.http.delete(`${this.API}/${p.id}`).pipe(take(1));\n    \n    }\n            \n            \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Department } from './department';\nimport { tap, delay, take } from 'rxjs/operators'; \nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DepartmentsService {\n\n    private readonly API = 'https://hdozero.herokuapp.com/departments';\n    \n    private alterouDepsBS = new BehaviorSubject<string>(`Dio - Egypt`);\n\n  constructor(private http: HttpClient) { }\n  \n  list(){\n    return this.http.get<Department[]>(this.API)\n        .pipe(\n            delay(1000),\n            tap(console.log)\n        );\n    \n    }\n    \n    add(d: Department) {\n        return this.http.post<Department>(this.API, d)\n            .pipe(take(1));\n\n    }\n            \n    update(d: Department){\n        return this.http.put(`${this.API}/${d.id}`, d).pipe(take(1));\n    \n    }\n            \n    delete(d: Department){\n        return this.http.delete(`${this.API}/${d.id}`).pipe(take(1));\n    \n    }\n            \n    alterouD(v: string){\n        this.alterouDepsBS.next(v);\n        \n    }\n    obterAlteracao(){\n        return this.alterouDepsBS;\n    }\n  \n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from '../product';\nimport { Department } from '../department';\nimport { ProductService } from '../product.service';\nimport { DepartmentsService } from '../departments.service';\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport { SucDialog } from '../dialogs/suc-dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {FormControl} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  prodName: string = '';\n  prodPrice: number = 0.00;\n  prodStock: number = 0.00;\n  prodDeps: Department[] = [];\n   products: Product[] = [ ];\n   prodId: number = 0;\n   isEdit: Product = null;\n   \n   products$: Observable<Product[]>;\n   \n   departments$: Observable<Department[]>;\n   \n   altD: Subscription;\n   \n   depFC = new FormControl();\n   \n   \n  constructor(\n        private service: ProductService,\n        private depService: DepartmentsService, \n        public dialog: MatDialog,\n        //private fb: FormBuilder,            \n        ) { }\n\n  ngOnInit() {\n  \n        // preencho a variavel\n    this.service.list().subscribe(dados => this.products = dados );\n    this.proxId();\n    \n    this.products$ = this.service.list();\n    \n    this.departments$ = this.depService.list();\n    this.altD = this.depService.obterAlteracao().subscribe(\n        v =>{this.departments$ = this.depService.list()}\n        );\n    \n  }\n  \n  proxId(){\n       \n        var highest = Number.NEGATIVE_INFINITY;\n        var tmp;\n        for (var i=this.products.length-1; i>=0; i--) {\n            tmp = this.products[i].id;\n            if (tmp > highest) highest = tmp;\n        }\n        this.prodId = highest+1;\n        \n    }\n  \n  save(){\n  \n        if (this.isEdit){\n            console.log(this.prodDeps);\n            let aux : string[] = [];\n            for (let d of this.prodDeps){aux.push(d.name)};\n            this.service.update({\n                \"name\": this.prodName, \n                \"id\": this.isEdit.id,\n                \"departments\": aux,\n                \"stock\": this.prodStock,\n                \"price\": this.prodPrice,               \n                })\n            .subscribe(\n                sucess => { console.log('sucess');\n                            this.dialog.open(SucDialog);\n                            console.log('sucess');\n                            this.products$ = this.service.list();\n                            this.isEdit = null;\n                            this.clearFields();\n                            },\n                error => console.error(error),\n                () => console.log('request completo')\n            );\n    \n        }else {\n                console.log(this.prodDeps);\n                let aux : string[] = [];\n                for (let d of this.prodDeps){aux.push(d.name)};\n                this.service.add({\n                    \"name\": this.prodName, \n                    \"id\": this.prodId,\n                    \"departments\": aux,\n                    \"stock\": this.prodStock,\n                    \"price\": this.prodPrice,               \n                    })\n                .subscribe(\n                    sucess => { console.log('sucess');\n                                this.dialog.open(SucDialog);\n                                console.log('sucess');\n                                this.products$ = this.service.list();\n                                this.clearFields();\n                                },\n                    error => console.error(error),\n                    () => console.log('request completo')\n                );\n         }\n    }\n    \n  clearFields(){\n    this.prodName = '';\n    this.prodPrice = 0;\n    this.prodStock = 0;\n    this.prodDeps = null;\n    this.isEdit = null;\n    \n    }\n  \n  cancel(){\n    this.clearFields();\n}\n  \n  edit(pro: Product){\n        this.isEdit = pro;\n        this.prodName = pro.name;\n        this.prodStock = pro.stock;\n        this.prodPrice = pro.price;\n        //this.prodDeps = pro.departments;\n                \n    }\n  \n  delete(pro: Product){\n    this.service.delete(pro)\n            .subscribe(\n                sucess => { console.log('sucess');\n                            this.dialog.open(SucDialog);\n                            console.log('sucess');\n                            this.products$ = this.service.list();\n                            this.isEdit = null;\n                            this.clearFields();\n                            },\n                error => console.error(error),\n                () => console.log('request completo')\n            );\n    \n    }\n    \n    teste(d: Department[]){\n        \n        for (let n of d){\n            //prod\n    \n            }\n    }\n\n}\n\n\n","<br /><mat-card fxFlex>\n    <mat-card-title>\n        Products Form\n    </mat-card-title>\n    \n    <mat-card-content>\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-between\">\n            <mat-form-field>\n                <input matInput [(ngModel)]=\"prodName\" (keyup.enter)=\"save()\">\n                       <mat-hint>The Product Name</mat-hint> \n                \n            </mat-form-field>\n            <mat-form-field>\n                <input matInput type=\"number\" [(ngModel)]=\"prodPrice\" (keyup.enter)=\"save()\">\n                       <mat-hint>The Product Price</mat-hint> \n                \n            </mat-form-field>\n            <mat-form-field>\n                <input matInput type=\"number\" [(ngModel)]=\"prodStock\" (keyup.enter)=\"save()\">\n                       <mat-hint>The Product Stock</mat-hint> \n                \n            </mat-form-field>\n            \n            <mat-form-field *ngIf=\"departments$ | async as depar; else loading\">\n                <mat-select placeholder=\"Departments\" multiple [(value)]=\"prodDeps\">\n                  <mat-select-trigger>\n                    {{depar ? depar[0]?.name : ''}}\n                    <span *ngIf=\"depar.length > 1\" class=\"additional-selection\">\n                      (+{{depar.length - 1}} {{depar.length === 2 ? 'other' : 'others'}})\n                    </span>\n                  </mat-select-trigger>\n                  <mat-option *ngFor=\"let dep of depar\" [value]=\"dep\">{{dep.name}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            \n            \n            <!-->\n            <mat-form-field>\n                <mat-label>Toppings</mat-label>\n                <mat-select [formControl]=\"toppings\" multiple>\n                  <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n                <-->\n            \n            \n            <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n                <button mat-button color=\"primary\" (click)=\"save()\">Save</button>\n                <button mat-button color=\"warn\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n        \n        \n        \n        \n        <!--> 1 estilo com o header sem ser filho\n        <h4>1 estilo</h4>\n        <div *ngIf=\"products$ | async as depar; else loading\">\n            <div *ngFor=\"let prod of depar\">\n            <div class=\"div-header-grupos\">\n                {{prod.name}}                \n            </div> \n        <div class=\"card div-card-branco\" >\n            <mat-icon>add_shopping_cart</mat-icon>\n             <button mat-icon-button color=\"primary\" (click)=\"edit(prod)\">edit</button>\n                <button mat-icon-button color=\"primary\" (click)=\"delete(prod)\">delete</button>\n            </div>\n        </div>\n    </div>\n        \n        <--> \n        \n        <br />\n        <h4>1 estilo</h4> \n        \n        <div fxLayout=\"row\" *ngIf=\"products$ | async as depar; else loading\">       \n            \n        <div class=\"card1 div-card-branco\"  *ngFor=\"let prod of depar\" >\n             <div class=\"div-header-grupos2\">\n                {{prod.name}}                \n            </div> \n            <div class=\"content-dep\"  fxLayout=\"row\" >\n                <mat-icon fxFlex=\"20\">add_shopping_cart</mat-icon>\n                <!--div class=\"prod-buts\"-->\n                <div fxFlex=\"60\" class=\"detal-prod\">\n                    <h5 >Preço: {{prod.price | currency:\"R$ \"}} </h5>\n                    <h5 >Stock: {{prod.stock}} </h5>                    \n                    <h5 >Departments: {{prod.departments}} </h5>                    \n                </div>\n                \n                   <button mat-icon-button color=\"primary\" (click)=\"edit(prod)\">edit</button>\n                <button mat-icon-button color=\"primary\" (click)=\"delete(prod)\">delete</button>\n                <!--/div-->\n            </div>            \n        </div>\n    </div>\n        \n        \n        <br />\n        <h4>2 estilo</h4> \n        \n        <div fxLayout=\"row\"   *ngIf=\"products$ | async as depar; else loading\">       \n            \n        <div class=\"card2 div-card-branco\" *ngFor=\"let prod of depar\" >\n             <div class=\"div-header-grupos2\">\n                {{prod.name}}                \n            </div> \n             <div class=\"content-dep\"  fxLayout=\"row\" >\n                <mat-icon fxFlex=\"20\">add_shopping_cart</mat-icon>\n                <!--div class=\"prod-buts\"-->\n                <div fxFlex=\"60\" class=\"detal-prod\">\n                    <h5 >Preço: {{prod.price | currency:\"R$ \"}}</h5>\n                    <h5 >Stock: {{prod.stock}} </h5>              \n                     <h5 >Departments: {{prod.departments}} </h5>\n                </div>\n                \n                   <button mat-icon-button color=\"primary\" (click)=\"edit(prod)\">edit</button>\n                <button mat-icon-button color=\"primary\" (click)=\"delete(prod)\">delete</button>\n                <!--/div-->\n            </div>             \n        </div>\n    </div>\n        \n        \n        \n        <ng-template #loading>\n            <span>Carregando departamentos...</span>\n        </ng-template>\n        \n        \n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logp',\n  templateUrl: './logp.component.html',\n  styleUrls: ['./logp.component.css']\n})\nexport class LogpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"card-login\" >\n<mat-card-title fxLayoutAlign=\"center\">\n        Log In\n    </mat-card-title>\n    \n    <mat-card-content class=\"content\">\n        \n        <div fxLayout=\"column\" class=\"input\" >\n            <mat-form-field>\n                <input matInput >\n                       <mat-hint>User</mat-hint>                \n            </mat-form-field>\n            <mat-form-field>\n                <input matInput >\n                       <mat-hint>Password</mat-hint>                \n            </mat-form-field>\n        \n            <div class=\"buttons\" fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"20px\">\n                <button mat-raised-button color=\"primary\" >Log In</button>\n                <button mat-raised-button color=\"basic\" >Create Account</button>\n            </div>\n        </div>\n        \n    </mat-card-content>\n    \n    \n \n </mat-card>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'doZero';\n}\n","<mat-toolbar color=\"primary\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">             \n   <span>Cadastro de Produtos</span>\n   <span></span>\n   <div fxLayoutGap=\"20px\">\n    <a mat-raised-button routerLink=\"logp\"  routerLinkActive=\"mat-accent\">Log In</a>\n    <a mat-raised-button routerLink=\"cad-prod-dep\"  routerLinkActive=\"mat-accent\">Products</a>\n  </div>\n</mat-toolbar>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport { DepartmentComponent } from './department/department.component';\nimport { ProductComponent } from './product/product.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatChipsModule} from '@angular/material/chips';\nimport { LogpComponent } from './logp/logp.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { CadProdDepComponent } from './cad-prod-dep/cad-prod-dep.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DepartmentComponent,\n    ProductComponent,\n    LogpComponent,\n    PagenotfoundComponent,\n    CadProdDepComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatChipsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Department } from '../department';\nimport { DepartmentsService } from '../departments.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SucDialog } from '../dialogs/suc-dialog';\n\n@Component({\n  selector: 'app-department',\n  templateUrl: './department.component.html',\n  styleUrls: ['./department.component.css']\n})\nexport class DepartmentComponent implements OnInit {\n\n   depName: string = '';\n   departments: Department[] = [ ];\n   depId: number = 0;\n   isEdit: Department = null;\n   \n   departments$: Observable<Department[]>;\n   \n   \n   \n  constructor(private service: DepartmentsService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n  \n        // preencho a variavel\n    this.service.list().subscribe(dados => this.departments = dados );\n    this.proxId();\n    \n    this.departments$ = this.service.list();\n    \n  }\n  \n  proxId(){\n       \n        var highest = Number.NEGATIVE_INFINITY;\n        var tmp;\n        for (var i=this.departments.length-1; i>=0; i--) {\n            tmp = this.departments[i].id;\n            if (tmp > highest) highest = tmp;\n        }\n        this.depId = highest+1;\n        \n    }\n  \n  save(){\n  \n        if (this.isEdit){\n            console.log(this.edit);\n            this.service.update({\"name\": this.depName, \"id\": this.isEdit.id})\n            .subscribe(\n                sucess => { console.log('sucess');\n                            this.dialog.open(SucDialog);\n                            console.log('sucess');\n                            this.departments$ = this.service.list();\n                            this.service.alterouD(this.depName);\n                            this.isEdit = null;\n                            this.clearFields();\n                            },\n                error => console.error(error),\n                () => console.log('request completo')\n            );\n    \n        }else {\n                this.service.add({\"name\": this.depName, \"id\": this.depId})\n                .subscribe(\n                    sucess => { console.log('sucess');\n                                this.dialog.open(SucDialog);\n                                console.log('sucess');\n                                this.departments$ = this.service.list();\n                                this.service.alterouD(this.depName);\n                                this.clearFields();\n                                },\n                    error => console.error(error),\n                    () => console.log('request completo')\n                );\n         }\n    }\n    \n  clearFields(){\n    this.depName = '';\n    this.isEdit = null;\n    }\n  \n  cancel(){\n    this.clearFields();\n}\n  \n  edit(dep: Department){\n        this.isEdit = dep;\n        this.depName = dep.name;\n                \n    }\n  \n  delete(dep: Department){\n    this.service.delete(dep)\n            .subscribe(\n                sucess => { console.log('sucess');\n                            this.dialog.open(SucDialog);\n                            console.log('sucess');\n                            this.departments$ = this.service.list();\n                            this.service.alterouD(this.depName);\n                            this.isEdit = null;\n                            this.clearFields();\n                            },\n                error => console.error(error),\n                () => console.log('request completo')\n            );\n    \n    }\n\n}\n","<mat-card fxFlex>\n    <mat-card-title>\n        Departments Form\n    </mat-card-title>\n    \n    <mat-card-content>\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-between\">\n            <mat-form-field>\n                <input matInput [(ngModel)]=\"depName\" (keyup.enter)=\"save()\">\n                       <mat-hint>The Department Name</mat-hint>                \n            </mat-form-field>\n            <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n                <button mat-button color=\"primary\" (click)=\"save()\">Save</button>\n                <button mat-button color=\"warn\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n        \n        <mat-list *ngIf=\"departments$ | async as depar; else loading\">\n            <h3 mat-subheader>Departments</h3>\n            <mat-list-item *ngFor=\"let dep of depar\">\n                <mat-icon mat-list-icon>folder</mat-icon>\n                <h4 mat-line>{{dep.name}}</h4>\n                <button mat-icon-button color=\"primary\" (click)=\"edit(dep)\">edit</button>\n                <button mat-icon-button color=\"primary\" (click)=\"delete(dep)\">delete</button>\n                </mat-list-item>\n        </mat-list>\n        \n        <!--br />\n        <div *ngIf=\"departments$ | async as depar; else loading\">\n            <div *ngFor=\"let dep of depar\">\n            <div class=\"div-header-grupos\">\n                {{dep.name}}                \n            </div> \n        <div class=\"card div-card-branco\" >\n             \n             <button mat-icon-button color=\"primary\" (click)=\"edit(dep)\">edit</button>\n                <button mat-icon-button color=\"primary\" (click)=\"delete(dep)\">delete</button>\n            </div>\n        </div>\n    </div>\n        <br />\n        <hr>\n        <br />\n        \n        <div *ngIf=\"departments$ | async as depar; else loading\">       \n            \n        <div class=\"card1 div-card-branco\" *ngFor=\"let dep of depar\" >\n             <div class=\"div-header-grupos1\">\n                {{dep.name}}                \n            </div> \n            <div class=\"content-dep\">\n                   <button mat-icon-button color=\"primary\" (click)=\"edit(dep)\">edit</button>\n                <button mat-icon-button color=\"primary\" (click)=\"delete(dep)\">delete</button>\n            </div>             \n        </div>\n    </div>\n        <br />\n        <hr>\n        <br />\n        \n        <div *ngIf=\"departments$ | async as depar; else loading\">       \n            \n        <div class=\"card2 div-card-branco\" *ngFor=\"let dep of depar\" >\n             <div class=\"div-header-grupos2\">\n                {{dep.name}}                \n            </div> \n            <div class=\"content-dep\">\n                   <button mat-icon-button color=\"primary\" (click)=\"edit(dep)\">edit</button>\n                <button mat-icon-button color=\"primary\" (click)=\"delete(dep)\">delete</button>\n            </div>             \n        </div>\n    </div-->\n        \n        \n        \n        <ng-template #loading>\n            <span>Carregando departamentos...</span>\n        </ng-template>\n        \n        \n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pagenotfound works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { LogpComponent } from './logp/logp.component';\nimport { CadProdDepComponent } from './cad-prod-dep/cad-prod-dep.component';\n\nconst routes: Routes = [\n    { path:'logp', component: LogpComponent},\n    { path:'cad-prod-dep', component: CadProdDepComponent},\n    { path: '', pathMatch: 'full', redirectTo: 'logp' },\n    { path: 'cadProd-setFocus', pathMatch: 'full', redirectTo: 'logp' },    \n    { path: '**', component: PagenotfoundComponent },\n    \n\n    ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {Component} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'dialog-elements-example-dialog',\n  templateUrl: './dialog-elements-example-dialog.html',\n})\nexport class SucDialog {\n    \n    msg: string = 'A operação foi bem sucedida';\n\n\n\n\n}","<h1 mat-dialog-title>Sucesso</h1>\n<div mat-dialog-content>{{msg}}</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}